#include <Vcl.Imaging.pngimage.hpp>
#pragma hdrstop

#include "BlackjackFinal.h"
#include "Card.h"
#include "Deck.h"

//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
Deck deck;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}

String _fastcall TForm1::filePath(Card card)
{
//	string symbol=card.getSymbol();
//	string suit=card.getSuit();
	return  System::String(card.getSymbol().c_str()) + "_of_" + System::String(card.getSuit().c_str()) + ".png";
}

void __fastcall TForm1::PanelStartClick(TObject *Sender)
{
	deck.Shuffle();
//	String suita=getSuit();
	PanelStand->Visible = true;
	PanelHit->Visible = true;
	PanelStart->Visible=false;
	deck.giveCardP();
	deck.giveCardD();
	deck.giveCardP();
	deck.giveCardD();
	Pcarte1->Picture->LoadFromFile(filePath(deck.giveHandP()[0]));
	Dcarte1->Picture->LoadFromFile(filePath(deck.giveHandD()[0]));
	Pcarte2->Picture->LoadFromFile(filePath(deck.giveHandP()[1]));
	Dcarte2->Picture->LoadFromFile(filePath(deck.giveHandD()[1]));
	deck.Test();


}
//---------------------------------------------------------------------------
void __fastcall TForm1::PanelHitClick(TObject *Sender)
{
	 deck.giveCardP();
	 if(deck.NrCartiP()==3)
	 {
	   Pcarte3->Picture->LoadFromFile(filePath(deck.giveHandP()[2]));
	 }
	 if(deck.NrCartiP()==4)
	 {
	   Pcarte4->Picture->LoadFromFile(filePath(deck.giveHandP()[3]));
	 }
	 if(deck.NrCartiP()==5)
	 {
	   Pcarte5->Picture->LoadFromFile(filePath(deck.giveHandP()[4]));
	 }



	 if(deck.ScoreP()>21)
	{
        DcarteSpate->Visible = false;
		Dcarte1->Visible=true;
		ShowMessage("Busted! - Dealer Wins!");
		PanelStand->Visible = false;
		PanelHit->Visible = false;

	}

   }

void __fastcall TForm1::PanelStandClick(TObject *Sender)
{

	DcarteSpate->Visible = false;
	Dcarte1->Visible=true;
	while(deck.ScoreD()<16){
	  deck.giveCardD();
	  if(deck.NrCartiD()==3)
	 {
	   Dcarte3->Picture->LoadFromFile(filePath(deck.giveHandD()[2]));
	 }
	 if(deck.NrCartiD()==4)
	 {
	   Dcarte4->Picture->LoadFromFile(filePath(deck.giveHandD()[3]));
	 }
	 if(deck.NrCartiD()==5)
	 {
	   Dcarte5->Picture->LoadFromFile(filePath(deck.giveHandD()[4]));
	 }
	}
	if(deck.ScoreD()<=21)
	{
		 if(deck.ScoreP()>deck.ScoreD())
		{
			ShowMessage("Player's Score: "+ IntToStr(deck.ScoreP())+ " - Dealer's Score: " +IntToStr(deck.ScoreD())+ " -> Player Wins!");
		}
		if(deck.ScoreP()<deck.ScoreD())
		{
			ShowMessage("Player's Score: "+ IntToStr(deck.ScoreP())+ " - Dealer's Score: " +IntToStr(deck.ScoreD())+ " -> Dealer Wins!");
		}
		if(deck.ScoreP()==deck.ScoreD())
		{
			ShowMessage("Player's Score: "+ IntToStr(deck.ScoreP())+ " - Dealer's Score: " +IntToStr(deck.ScoreD())+ " -> Draw");
		}
	}
	else
	{
		ShowMessage("Dealer Busted! - Player Wins!");
    }




}

